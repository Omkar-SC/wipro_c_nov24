Viva Qs on C

1. What is the size of the DT short unsigned int
ans: 2 bytes

2. Is C programming Modular ? How do you implement it
ans: Yes, to implement Modularity in c program we divide the code in multiple files namely .h (header file) and .c (source) files

3. What is an object file?
ans: An object file is a file that contains machine code or bytecode, as well as other data and metadata, generated by a compiler or assembler from source code during the compilation or assembly process.

4. When does the Interpretation happens in C?
ans: C is not support interpreter, it is supports compiler which translates your C code into a set of machine instructions which your computer will execute directly

5. What do you mean Data binding ?


6. What is the prototype of strlen()
ans: size_t strlen(const char*);

7. What is the alternative to the -> operator ?
ans: 

8. Give 2 differences between Array and structure?
ans:

9. Give 2 similarites between Array and DS.
ans: 

10. What is efficiency of Binary Search ?

11. What is the efficiency of finding biggest element in a Array?
ans: O(n)

12. What is the efficiency of deleting a node from a LL?

13. What is a DS ?
14. Mention any one Domain oriented Language

15. Why do we store \0 in a string ?
ans: \0 is a null Character which is stored at the end of the string to denote its end.

16. What are command line arguments and how many args does main() receive ?
ans: these are the arguments or values passed through the command line, the main receives n - 1 arguments. 

17. What do we achieve using structures ?
Space or Data Abstraction or ease of sending args to functions ?
18. What are the manipulators we can apply on the DT int
19. What are the manipulators we can apply on the DT float ?

20. From inside a loop, where does the break and continue statements take the control to ?
answer: inside the loop if break statement is encountered if stops the iteration and exits the loop
and if continue is encountered it skips that iteration and loop continues.

21. What does the Escape sequence \a does ?
ans: The escape sequence \a in programming, specifically in languages like C, C++, and others, is known as the alert or bell character. When used in a string, it produces a beep sound or an audible alert on the system.

22. Which is the keyword used to retain the life of a local variable until end of the program ?
ans: Static keyword used to retain the life of a local variable until end of the program

23. Give me an application of do-while loop ?

24. When should we not use for loop ?
ans: 	Avoid for loops when:
	The number of iterations is unknown.
	The stopping condition is complex or unpredictable.
	You need to execute the loop body at least once (use do-while instead).
	You're iterating over collections in high-level languages (use foreach or iterators).
	You don't need to modify the loop variable.
	Recursion or other control structures (like while or do-while) are more fitting for the problem.

25. What is the use of '&'in scanf()
ans: in scanf() & is used to store the value Entered by the user at the address of variable

26. To store an address of a 2D Array, what do we need ?
ans: a pointer and contiguous memory. 

27. Which format specifier must be used to print an address ?
ans: format specifier used to print an address is %p

28. Which function is used to read an unformatted string from console ?
ans: gets() function is used to read an unformatted string from console

29. What is the prototype of malloc()
ans: void *malloc(size_t size);

30. Why does malloc() return the address as void*
ans: The malloc() function in C returns a void* (void pointer) because it is designed to be generic and able to allocate memory for any type of data.

31. What does the ~ operator do ?
and: it gives 1's compliment of the number

32. What is short circuting? What is the syntax to use it ?

33. What happens if we write ++i instead of i++ in for() loop
ans: the result does not change, only i performs pre-incrementation.

34. What happens if function is less cohesive?
ans: If a function is less cohesive, it means that the function has low cohesion, i.e., it performs multiple, unrelated tasks within a single function. In programming, cohesion refers to the degree to which the elements (statements or operations) within a function are closely related to each other, typically centered around a single responsibility or task.

35. What is the advantage of a function solving one problem? and what it is called as ?
ans: When a function is designed to solve one problem, it is considered to have a high cohesion.
	advantages are it Improved Readability, easy to maintain, improves reusability

36. What is a BASE/Exit Condition in a Recursive function ?
ans: In a recursive function, the base condition (also known as the exit condition) is a condition that stops the recursion. It prevents the function from calling itself indefinitely and ensures that the recursion eventually terminates, returning a result. Without a proper base condition, a recursive function would enter an infinite loop

37. What is a Call Stack ?
ans: The call stack is a special kind of data structure used by a program to manage function calls, particularly in the context of recursion and function execution. It is a stack (last-in, first-out, or LIFO) that keeps track of function calls, local variables, and the execution context as the program runs.

38. What are the contents of a Frame ?
ans: A frame (also called a stack frame) is a data structure that stores the information needed for a single function call in a program. Each time a function is called, a new frame is pushed onto the call stack.
	content of frame are: 
	1) Return Address: It is the address where the program where the control should return after the current function finish the execution
	2) Function Parameters: These are the values or references passed to the function when it is called.
	3) Local Variables: Local variables are variables declared inside the function. These are specific to the function and can only be 	  	   accessed within that function.


39. What is a Return Address ?
40. What is the Scope of a Local Static Variable ?
41. What is the scope of a global static variable?
42. What is the life of a local variable?
43. What you mean by De-refrencing an address ?
44. Why an address cannot be a number ?
45. What is Pointer Arithmetic ?
46. How many Pointer arithmetic are there and which are they ?
47. What is Dangling Pointer ?
48. What is a Wild Pointer ?
49. What is NULL and what is \0
50. Is an Array memory efficient DS ?
51. What is the efficiency of accessing an element from a 2D Array ?
52. What is the efficiency of inserting an element in between 2 elements in an Array ?
53. How do you release the memory allocated in the Heap ?
54. How many arguments does malloc() take ?
55. Which function is used to reposition the fp in a file ?
56. Which function is used to reposition the file pointer to the beggining of a file ?
57. Which function is used to check if fp has reached EOF ?
58. What is the prototype of feof()
59. Which function is used to find a sub string in a string in C ?
60. What is the job LINKER/Linking ?
61. How does the OS send ans receive all the data to and from a program/app ?
62. what is type casting ?
63. what is down cast ?
64. what is explicit cast ?
65. What is call by value ?
66. what is call by address ?
67. Which of the following operators has highest priority?
